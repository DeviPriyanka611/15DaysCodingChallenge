class Solution {
    public String longestPalindrome(String s) {
        if (s == null || s.length() < 1) return "";

        String longest = "";

        for (int i = 0; i < s.length(); i++) {
            String odd = expandAroundCenter(s, i, i);

            String even = expandAroundCenter(s, i, i + 1);

            String currentLongest = odd.length() > even.length() ? odd : even;

           
            if (currentLongest.length() > longest.length()) {
                longest = currentLongest;
            }
        }

        return longest;
    }

   
    private String expandAroundCenter(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
       
        return s.substring(left + 1, right);
    }

    
    public static void main(String args[]) {
        Solution obj = new Solution();
        String result = obj.longestPalindrome("babad");
        System.out.println("Longest Palindromic Substring: " + result);
    }
}
