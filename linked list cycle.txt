/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        HashSet <ListNode> visited=new  HashSet<>();
        ListNode  current =head;
        while (current != null) {
            if (visited.contains(current)) {
                return true;  
            }
            visited.add(current);  
            current = current.next;
        }

        return false; 
    }
    public static void main(String args[]){
        ListNode head = new ListNode(3);
        head.next = new ListNode(2);
        head.next.next = new ListNode(0);
        head.next.next.next = new ListNode(-4);
        head.next.next.next.next = head.next; 

        Solution obj = new Solution();
        System.out.println("Has Cycle: " + obj.hasCycle(head));
    }
}